#!/usr/bin/env node --harmony

'use strict';

var program = require('commander');

var optionDescriptions = require('../lib/optionDescriptions');
var mmsUtil = require('../lib/util/mmsUtil');
var MopsConfig = require('../lib/util/MopsConfig');
var promptUtil = require('../lib/util/promptUtil');
var Schema = require('../lib/schema.js');
var q = require('q');

var config = new MopsConfig();
var mms = mmsUtil.getClient(config);
var fs = require('fs');

program.name = null; // addresses problem with Commander library.
                    // 'name' is reserved word.
program
  .option('-g, --groupId [groupId]', optionDescriptions.GROUP_ID)
  .option('-n, --name [name]', optionDescriptions.SSH_KEY_NAME)
  .option('-f, --file [file]', optionDescriptions.SSH_KEY_FILE)
  .parse(process.argv);

promptUtil.getRequiredOptions(Schema.SSHKey, program.opts(), config)
.then(function(options) {
  var sshKeyToPost = {
    "name": options.name,
    "key": fs.readFileSync(options.file).toString()
  };

  var insertKey = mms.post('/groups/' + options.groupId + '/provisioning/sshKeys', sshKeyToPost);
  q.all(insertKey).then(
    function(insertAlert) {
      console.log('SSHKey inserted.');
    },
    function(error) {
      console.log('SSHKey not inserted: ', error);
    }
  )
});
